# docker-compose.yml - Invoice Payment Intelligence Stack
services:
  # Main Application
  invoice-app:
    build: .
    ports:
      - "8501:8501"
    environment:
      - DATABASE_URL=postgresql://invoice_user:invoice_pass@db:5432/invoice_db
      - SPARK_MASTER=local[*]
      - MODEL_PATH=/app/models/saved_models
      - LOG_LEVEL=INFO
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./models:/app/models
      - ./src:/app/src
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8501', timeout=10)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=invoice_db
      - POSTGRES_USER=invoice_user
      - POSTGRES_PASSWORD=invoice_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U invoice_user -d invoice_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for Caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: